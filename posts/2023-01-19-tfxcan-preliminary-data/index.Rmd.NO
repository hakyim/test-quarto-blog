---
title: TFXcan preliminary data
author: Haky Im
date: '2023-01-19'
slug: tfxcan-preliminary-data
categories:
  - analysis
tags: []
editor_options: 
  chunk_output_type: console
---

Based on Temi's (FOXA1) TF prediction from DNAseq

```{r}
suppressMessages(library(tidyverse))
suppressMessages(library(glue))
PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
##PRE="/Users/margaretperry/Library/CloudStorage/Box-Box/imlab-data/data-Github/web-data "
##PRE="/Users/temi/Library/CloudStorage/Box-Box/imlab-data/data-Github/web-data"
## COPY THE DATE AND SLUG fields FROM THE HEADER
SLUG="tfxcan-preliminary-data" ## copy the slug from the header
bDATE='2023-01-19' ## copy the date from the blog's header here
DATA = glue("{PRE}/{bDATE}-{SLUG}")
if(!file.exists(DATA)) system(glue::glue("mkdir {DATA}"))
WORK=DATA

## move data to DATA
#tempodata=("~/Downloads/tempo/gwas_catalog_v1.0.2-associations_e105_r2022-04-07.tsv")
#system(glue::glue("cp {tempodata} {DATA}/"))
## system(glue("open {DATA}")) ## this will open the folder 
```

Read Temi's data
```{r}

##source qqunif gist
devtools::source_gist("38431b74c6c0bf90c12f")

tempo <- readRDS(glue("{DATA}/freedman_FOXA1_predicted_vs_observed_matrix_2023-01-19.rds"))
head(tempo$observed)[,1:5]
head(tempo$predicted)[,1:5]
identical(tempo$observed$region, tempo$predicted$region)

obs <- tempo$observed %>% select(-region) %>% as.matrix
rownames(obs) <- tempo$observed$region

pred <- tempo$predicted %>% select(-region) %>% as.matrix
rownames(pred) <- tempo$predicted$region

identical(rownames(obs), rownames(pred))

## remove sites with no binding
nbou <- apply(obs,1,sum)
ind <- nbou>3 & nbou < 14
obs <- obs[ind,]
pred <- pred[ind,]
identical(rownames(obs), rownames(pred))

pvec = rep(NA,nrow(obs))
tvec = rep(NA,nrow(obs))
for(cc in 1:nrow(obs) ) 
{
  res = t.test(pred[cc,obs[cc,]==1], pred[cc,obs[cc,]==0])
  pvec[cc] = res$p.value
  tvec[cc] = res$statistic
  }

hist(pvec)
qqunif(pvec)

```

## permute sites for observed
```{r}

for(pp in 1:4)
{
obs_perm <- obs[sample(1:nrow(obs),nrow(obs),replace=FALSE),]
pvec_perm = rep(NA,nrow(obs))
for(cc in 1:nrow(obs) ) 
{
  res = t.test(pred[cc,obs_perm[cc,]==1], pred[cc,obs_perm[cc,]==0])
  pvec_perm[cc] = res$p.value
  }

titulo = glue("perm-{pp}:")
print(titulo)
##hist(pvec_perm,main=titulo)
qqunif(pvec_perm,main=titulo)
qqplot(-log10(pvec_perm), -log10(pvec), 
       main=paste(titulo ))
abline(0,1)
par(mfrow=c(1,1))

}
```
